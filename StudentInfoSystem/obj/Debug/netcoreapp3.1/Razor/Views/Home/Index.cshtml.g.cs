#pragma checksum "E:\project\2022\直播\StudentSystem\StudentInfoSystem\StudentInfoSystem\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b2bfc0b4916c545be9771caeab1b310a64f3a1be"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\project\2022\直播\StudentSystem\StudentInfoSystem\StudentInfoSystem\Views\_ViewImports.cshtml"
using StudentInfoSystem;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\project\2022\直播\StudentSystem\StudentInfoSystem\StudentInfoSystem\Views\_ViewImports.cshtml"
using StudentInfoSystem.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b2bfc0b4916c545be9771caeab1b310a64f3a1be", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e5d7c3c9362d3042be4a5416a1caf5f33f7d4dec", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jsencrypt.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "E:\project\2022\直播\StudentSystem\StudentInfoSystem\StudentInfoSystem\Views\Home\Index.cshtml"
  
    Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!DOCTYPE html>\r\n\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b2bfc0b4916c545be9771caeab1b310a64f3a1be4011", async() => {
                WriteLiteral(@"
    <meta name=""viewport"" content=""width=device-width"" />
    <title>后台管理系统</title>
    <link href=""/css/hbes.reset.css"" rel=""stylesheet"" />
    <link href=""/css/hbes.home.css"" rel=""stylesheet"" />
    <link href=""/js/layui/css/layui.css"" rel=""stylesheet"">
    <link href=""/css/zTree/zTreeStyle/zTreeStyle.css"" rel=""stylesheet"" />
    <link href=""/css/fonts/font-awesome.min.css"" rel=""stylesheet"" />


    <script src=""/js/jquery.min.js"" type=""text/javascript""></script>
    <script src=""/js/jquery-ui.js"" type=""text/javascript""></script>
    <script src=""/js/common.js"" type=""text/javascript""></script>
    <script src=""/js/jquery.layout.js"" type=""text/javascript""></script>
    <script src=""/js/layui/lay/dest/layui.all.js""></script>
    <script src=""/js/zTree/jquery.ztree.core.min.js""></script>
    <style type=""text/css"">
              .ui-layout-pane {
                  overflow: auto;
              }

              .ui-layout-pane-north {
                  background: #23262E;
              ");
                WriteLiteral(@"}

              .ui-layout-pane-west {
                  background: #393D49;
              }
              /*所有拉动条的样式*/
              .ui-layout-resizer {
                  background: #c2c2c2;
              }

              .ui-layout-resizer-west {
              }

              .ui-layout-pane-center {
                  background: #fff;
              }
              /* 拉动条拉动时，保持不动的拉动条样式，不明白修改背景测试。 */
              .ui-layout-resizer-drag {
                  background: #fff;
              }
              /*拖动拉动条时，拉动条的样式，据说是设置“打开悬停”和“拖动”为同一样式。 */
              /*.ui-layout-resizer-open-hover ,   */
              .ui-layout-resizer-dragging {
              }
              /*拖动拉动条时，到最大或最小边缘时的样式*/
              .ui-layout-resizer-dragging-limit { /* red */
              }

              .ui-layout-resizer-closed {
              }
              /*拉动条关闭时，鼠标移上去的样式。*/
              .ui-layout-resizer-closed-hover {
              }
              /*窗格关闭后，点击拉动条（非拉动条按钮）,窗格滑动时拉动条的样式*");
                WriteLiteral(@"/
              .ui-layout-resizer-sliding {
              }
              /*窗格关闭后，点击拉动条（非拉动条按钮）,窗格滑动时，鼠标悬停在拉动条上的样式*/
              .ui-layout-resizer-sliding-hover {
              }

              /*
        *  拖动杆上的按钮
        */
              .ui-layout-toggler {
                  border: 1px solid #CCCCCC;
                  background-color: #bcd2ef;
                  /*opacity: .60;
           filter:  alpha(opacity=60);*/
              }
              /*鼠标悬停在拖动条上按钮的样式*/
              .ui-layout-toggler-hover {
              }
              /*窗格关闭后，半打开状态的拉动条是隐藏的*/
              .ui-layout-resizer-sliding ui-layout-toggler {
                  display: none;
              }
              /*貌似是按钮上的文字内容*/
              .ui-layout-toggler .content {
                  font-size: 12px;
              }

              .ui-layout-toggler-west-open {
                  background: url(/images/left.png) no-repeat center;
                  background-color: #fff;
                  color: ");
                WriteLiteral(@"#23262E;
                  font-size: 5px;
                  font-weight: bold;
                  border: none;
              }

              .ui-layout-toggler-west-closed {
                  background: url(/images/right.png) no-repeat center;
                  background-color: #fff;
                  color: #23262E;
                  font-size: 5px;
                  font-weight: bold;
                  background-color: #fff;
                  border: none;
              }

              .ztree {
                  color: #fff;
                  margin: 0;
                  padding: 0;
              }

                  .ztree li a {
                      width: 100%;
                      float: left;
                      height: 40px;
                      font-size: 14px;
                      margin: 0;
                      padding: 0;
                  }

                      .ztree li a:hover {
                          text-decoration: none;
                    ");
                WriteLiteral(@"  }

                      .ztree li a span {
                          font-size: 14px;
                          font-family: ""微软雅黑"";
                          margin-left: 10px;
                      }

                  .ztree i {
                      margin-right: 6px;
                      font-size: 18px;
                  }

                  .ztree li {
                      background: #23262E;
                      line-height: 40px;
                      width: 100%;
                      margin: 0;
                      padding: 0;
                  }

                      .ztree li ul {
                          background: #393D49;
                          width: 100%;
                          margin: 0;
                          padding: 0;
                      }

                          .ztree li ul li {
                              background: #393D49;
                              width: 100%;
                              margin: 0px;
               ");
                WriteLiteral(@"               padding: 0px;
                          }

                  .ztree ul li a {
                      width: 100%;
                      float: left;
                      height: 40px;
                      font-size: 14px;
                      margin: 0;
                      padding: 0;
                  }

                      .ztree ul li a span {
                          font-size: 14px;
                          font-family: ""微软雅黑"";
                      }

                      .ztree ul li a:hover {
                          text-decoration: none;
                      }
    </style>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b2bfc0b4916c545be9771caeab1b310a64f3a1be10961", async() => {
                WriteLiteral(@"
    <div class=""ui-layout-center"" id=""Center"">

        <!--hbes-tabnav begin-->
        <div id=""Hbes-tabNav"" class=""hbes-tabnav"">
            <div class=""hbes-tabnav-warper"">
                <ul id=""hbes-tabnav-title-list"" class=""acrossTab cl"" style=""width: 266px; left: 0px;"">
                    <li class=""active"" id=""default_li""><span title=""我的桌面"" data-href=""Home.aspx"">我的桌面</span><em></em></li>

                </ul>
            </div>
            <div class=""hbes-tabnav-more"">
                <a href=""javascript:;"" class=""btn btn-default btn-xs""><i class=""glyphicon glyphicon-chevron-right""></i></a>
                <a href=""javascript:;"" class=""btn btn-default btn-xs""><i class=""glyphicon glyphicon-chevron-left""></i></a>
                <a onclick=""HBESHome.baas.closeAllTable()"" class=""btn btn-default btn-xs""><i class=""glyphicon glyphicon-remove""></i></a>
            </div>
        </div>
        <!--hbes-tabnav end-->
        <!--hbes-article begin-->
        <!-- 遮盖层，如果没有 拖动的时候有iframe");
                WriteLiteral(@"会卡的伤心 -->
        <div id=""div_win"" style=""width:100%; height:100%; display:none;   position:absolute; z-index:11; ""></div>
        <div id=""hbes-iframe-box"" class=""hbes-article"" style=""width:100%; height:100%;"">

            <div class=""show-iframe"" id=""default_if"">
                <div class=""loading display-none""></div>

                <iframe style=""bottom: 0;  width: 100%; overflow: auto; height: 100%; margin: 0; padding: 0; border: none;""
                        src=""/Home/TestAdd""></iframe>
            </div>
        </div>
        <!--hbes-article end-->
    </div>
    <div class=""ui-layout-north"" id=""North"" style=""color:#fff;"">

        <div style=""margin-top:10px;float: left;"">
            <div style=""float:left;"">
                <img src=""/images/logo.png"" />
            </div>
            <div style=""float:left;font-size: 32px; font-weight: bold;  text-shadow: 2px 2px 2px #333;"">后台管理系统</div>
        </div>

        <div style="" float: right;  width:400px;  margin-right: 10p");
                WriteLiteral(@"x; font-size:12px;"">
            <div style=""margin-top:25px; width:100%; float:left; "">
                <div style=""float:right; font-size:16px;"">
                    <span>欢迎您！系统管理员  登录系统</span>
                </div>
            </div>

            <div style=""margin-top:10px;width:100%;float:left;"">
                <div style=""float:right;"">

                    <span id=""currentTime"" style=""margin-left:30px; margin-right:20px;"">&nbsp;</span>

                    <a style=""display:inline;  color:#fff; text-decoration:none;"" onclick=""editpwd()"">
                        <i class=""fa  fa-edit""></i>修改密码
                    </a>
                    <a style=""display:inline;  margin-left:10px; color:#fff; text-decoration:none;"" onclick=""logout()"">
                        <i class=""fa fa-sign-out""></i>退出登录
                    </a>
                </div>
            </div>
        </div>
    </div>
    <div class=""ui-layout-south"" id=""South"" style="" line-height:24px; text-align:center;"">
  ");
                WriteLiteral("      <span>XXXXX:XXXXXXXXXXX</span>\r\n        <span style=\"margin-left:20px;\">XXXXXX：XXX-XXXXXX</span>\r\n    </div>\r\n    <div class=\"ui-layout-west\" id=\"West\">\r\n\r\n        <ul class=\"ztree\" id=\"ul_Tree\"></ul>\r\n    </div>\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b2bfc0b4916c545be9771caeab1b310a64f3a1be14754", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script type=""text/javascript"">
         function logout() {
             layer.confirm(""确认退出？"", { title: '提示信息', closeBtn: 0, icon: 3, btn: ['确认', '取消'] }, function (index) {
                 layer.close(index);
                 location.href = ""/Login"";

             }, function () {

             });

         }

         function editpwd() {
             var html = '<form id=""formData"" class=""ma-20""><div>';
             html += '<table  class=""formtable"" >';
             html += '<colgroup> <col style=""width:100px;"" /><col  /> </colgroup>';
             html += '<tr><td class=""ft_label"" >原密码</td>';
             html += '<td class=""ft_control""><input type=""password"" id=""txt_OldPwd""  style=""width:90%;""  class=""form-control hbes-input""/></td></tr>';
             html += '<tr><td class=""ft_label"" >新密码</td>';
             html += '<td class=""ft_control""><input type=""password"" id=""txt_NewPwd"" style=""width:90%;""  class=""form-control hbes-input""/></td></tr>';
             html += '<tr><t");
                WriteLiteral(@"d class=""ft_label"" >确认新密码</td>';
             html += '<td class=""ft_control""><input type=""password"" id=""txt_CkNewPwd""  style=""width:90%;""  class=""form-control hbes-input""/></td></tr>';
             html += ""</table></div></form>"";
             layer.open({
                 type: 1,
                 icon: 1,
                 area: [""400px"", ""300px""],
                 btn: ['确定', '取消'],
                 content: html,
                 yes: function (index, layero) {
                     var oldPwd = $(""#txt_OldPwd"").val();
                     var newPwd = $(""#txt_NewPwd"").val();
                     var ckNewPwd = $(""#txt_CkNewPwd"").val();
                     if ($.trim(oldPwd) == """") {
                         layer.alert(""请输入原密码"", { icon: 0 });
                         return;
                     }
                     else if ($.trim(newPwd) == """") {
                         layer.alert(""请输入新密码"", { icon: 0 });
                         return;
                     }
                  ");
                WriteLiteral(@"   else if ($.trim(ckNewPwd) == """") {
                         layer.alert(""请输入确认新密码"", { icon: 0 });
                         return;
                     }
                     else if (oldPwd == newPwd) {
                         layer.alert(""新密码不能与原密码一致"", { icon: 0 });
                         return;
                     }
                     else if (newPwd != ckNewPwd) {
                         layer.alert(""两次输入的密码不一致"", { icon: 0 });
                         return;
                     }
                     var encrypt = new JSEncrypt();
                     encrypt.setPublicKey(pubKey);

                     submitData(""/Home/UpdatePwd"", { ""oldPwd"": encrypt.encrypt(oldPwd), ""newPwd"": encrypt.encrypt(newPwd) }, function (data) {


                     });
                 }
             });
         }
    </script>
    <script type=""text/javascript"">




        $(function () {
            var myLayout = $(""body"").layout(
            {
                applyDefaultStyle");
                WriteLiteral(@"s: false,
                north: {
                    size: 80,
                    spacing_open: 0,
                    closable: false,
                    resizable:false
                },
                south: {
                    size: 24,
                    spacing_open: 1,
                    closable: false,
                    resizable: false
                },
                west: {
                    size: 230,
                    minSize: 120,
                    maxSize:250,
                    spacing_open: 5,
                    spacing_closed:5,
                    closable: true,
                    resizable: true,
                    togglerTip_open:""关闭"",//pane打开时，当鼠标移动到边框上按钮上，显示的提示语
                    togglerTip_closed: ""打开"",
                    resizerTip: ""可调整大小"",
                    togglerContent_open: """",
                    togglerContent_closed: """"
                },
                onresize: function ()
                {


                },");
                WriteLiteral(@"
                onresize_end: function ()
                {
                    $(""#div_win"").hide();
                }
            }
            );


            $("".ui-layout-resizer-west"").mousedown(function () {
                $(""#div_win"").show();
            });
            showCurrentTime();
            setInterval(showCurrentTime, 1000);


        });

        function showCurrentTime()
        {
            var today = new Date(); //定义日期对象
            var yyyy = today.getFullYear(); //通过日期对象的getFullYear()方法返回年
            var MM = today.getMonth() + 1; //通过日期对象的getMonth()方法返回年
            var dd = today.getDate(); //通过日期对象的getDate()方法返回年
            var hh = today.getHours(); //通过日期对象的getHours方法返回小时
            var mm = today.getMinutes(); //通过日期对象的getMinutes方法返回分钟
            var ss = today.getSeconds(); //通过日期对象的getSeconds方法返回秒
            // 如果分钟或小时的值小于10，则在其值前加0，比如如果时间是下午3点20分9秒的话，则显示15：20：09
            MM = checkTime(MM);
            dd = checkTime(dd);
          ");
                WriteLiteral(@"  mm = checkTime(mm);
            ss = checkTime(ss);
            var day; //用于保存星期（getDay()方法得到星期编号）
            if (today.getDay() == 0) day = ""星期日 ""
            if (today.getDay() == 1) day = ""星期一 ""
            if (today.getDay() == 2) day = ""星期二 ""
            if (today.getDay() == 3) day = ""星期三 ""
            if (today.getDay() == 4) day = ""星期四 ""
            if (today.getDay() == 5) day = ""星期五 ""
            if (today.getDay() == 6) day = ""星期六 ""
            var times = yyyy + ""-"" + MM + ""-"" + dd + "" "" + hh + "":"" + mm + "":"" + ss + ""   "" + day;
             //每一秒中重新加载startTime()方法
            $(""#currentTime"").text(times);

        }
        function checkTime(i) {
            if (i < 10) {
                i = ""0"" + i;
            }
            return i;
        }




    </script>
    <script type=""text/javascript"">

        var setting = {

            data: {
                key: {
                    name: ""text""
                },
                simpleData: {
         ");
                WriteLiteral(@"           enable: true,
                    idKey: ""id"",//节点绑定的字段(数据库表字段groupid)
                    pIdKey: ""pid""//节点的上级字段(数据库表字段parentid)
                }
            }
      , callback: {
          beforeClick: function (treeId, treeNode, clickFlag) {


              if (!treeNode.isParent)
              {

                  var liObj = $(""#"" + treeNode.tId);
                  $("".ztree li"").css(""background-color"", ""#393D49"");
                  var nodes = myTree.getNodesByParam(""level"",""0"", null);
                  for (var n = 0 ; n < nodes.length; n++)
                  {
                      var node = nodes[n];
                      if (node.isParent)
                      {
                          $(""#"" + node.tId).css(""background-color"", ""#23262E"");
                      }
                  }



                  liObj.css(""background"", ""#009688"");

                  HBESHome.baas.addTab(treeNode.text, treeNode.Url, treeNode.id);
              }
              else ");
                WriteLiteral(@"{
                  myTree.expandNode(treeNode, !(treeNode.open), false, false);

                  var isOpen = treeNode.open;
                  var faClass = """";

                  if (isOpen) {
                      faClass = ""fa-caret-down"";
                  }
                  else {
                      faClass = ""fa-caret-right"";
                  }
                  var spanObj = $(""#"" + treeNode.tId + ""_span"");
                  var i = $(""<i id='"" + treeNode.tId + ""_i' class='fa "" + faClass + ""'></i>"");
                  $(""#"" + treeNode.tId + ""_i"").remove();
                  spanObj.prepend(i);
              }
              return false;
          },
          onClick: function (event, treeId, treeNode) {

          }
      },

            view:
                {
                    showLine: false,
                    fontCss: { color: ""#fff"" },
                    showTitle: false,
                    addDiyDom: addDiyDom
                }

        };
        f");
                WriteLiteral(@"unction addDiyDom(treeId, treeNode)
        {

            var liObj = $(""#"" + treeNode.tId);
            liObj.css({ ""margin"": ""0px"",""padding"":""0px"",""float"":""left"" });
            var aObj = $(""#"" + treeNode.tId + ""_a"");

            var switchObj = $(""#"" + treeNode.tId + ""_switch"");
            var icoObj = $(""#"" + treeNode.tId + ""_ico"");
            var spanObj = $(""#"" + treeNode.tId + ""_span"");

            switchObj.remove();
            icoObj.remove();

            if (treeNode.level == 0) {
                var treeObj = $.fn.zTree.getZTreeObj(""ul_Tree"");
                treeObj.expandNode(treeNode, true, false, false);
            }

            if (treeNode.isParent) {
                var isOpen = treeNode.open;
                var faClass = """";
                if (isOpen) {
                    faClass = ""fa-caret-down"";
                }
                else {
                    faClass = ""fa-caret-right"";
                }
                var i = $(""<i id='"" + treeNode.");
                WriteLiteral(@"tId + ""_i' class='fa "" + faClass + ""'></i>"");
                spanObj.prepend(i);
                spanObj.css(""margin-left"", treeNode.level * 15 + 10 + ""px"");
            }
            else {
                //#393D49
                liObj.css(""background"", ""#393D49"");
                spanObj.css(""margin-left"", treeNode.level * 15 + 10 + ""px"");
                if (treeNode.level == 0)
                {
                    spanObj.css(""margin-left"", 26 + ""px"");
                }
            }

        }
        var myTree;

        $(function ()
        {
            var menuData = eval('");
#nullable restore
#line 532 "E:\project\2022\直播\StudentSystem\StudentInfoSystem\StudentInfoSystem\Views\Home\Index.cshtml"
                            Write(Html.Raw(ViewData["menu"]));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"');
            myTree = $.fn.zTree.init($(""#ul_Tree""), setting, menuData);
            HBESHome.baas.tabClick($(""#default_li""), $(""#default_if""));

        });

        var HBESHome = {};
        HBESHome.config = {
            tabnavlist: $('#hbes-tabnav-title-list'),
            iframebox: $('#hbes-iframe-box')
        };
        HBESHome.baas = (function () {
            return {

                addTab: function (title, url, id, icon) {

                    /*1.判断打开的tab是否存在，如果不存在，则创建，如果存在，则直接切换的此tab*/

                    var isexists = ($(""#active"" + id).length == 1);

                    if (isexists)
                    {
                        var active = $(""#active"" + id);
                        $(active).addClass('active').siblings().removeClass('active');
                        $('#hbes-iframe-box').children().addClass('display-none').eq($(active).index()).removeClass('display-none');

                    } else {
                        var $tabContent = $('<div  cl");
                WriteLiteral(@"ass=""show-iframe""><div class=""loading display-none""></div><iframe name=""hb_iframe_' + id + '"" style=""bottom: 0; width: 100%; overflow: auto; height: 100%; margin: 0; padding: 0; border: none;"" src=""' + url + '""></iframe></div>');
                        $('#hbes-tabnav-title-list').children().removeClass('active');
                        var $tabNav = $('<li class=""active""  id=""active' + id + '""><span title=""' + title + '"" data-href=""' + url + '"">' + title + '</span><i></i><em></em></li>');
                        $('#hbes-tabnav-title-list').append($tabNav);

                        //增加tabnav，并追加宽度
                        $('#hbes-tabnav-title-list').css({ ""width"": (180 * $('#hbes-tabnav-title-list').children().length) + ""px"" });
                        HBESHome.baas.tabClick($tabNav, $tabContent);

                        $('#hbes-iframe-box').children().addClass('display-none');
                        $('#hbes-iframe-box').append($tabContent);
                    }
                },
      ");
                WriteLiteral(@"          tabClick: function ($tabNav, $tabContent) {

                    $tabNav.click(function () {

                        $(this).addClass('active').siblings().removeClass('active');
                        $('#hbes-iframe-box').children().addClass('display-none').eq($(this).index()).removeClass('display-none');
                    });
                    $tabNav.find('i').click(function () {

                        //当前tab索引
                        var index = $tabNav.index();
                        //移除tab标签
                        $tabNav.remove();
                        //移除tab内容
                        $tabContent.remove();
                        //判断当前tab的索引值，如果小于tab的总个数-1
                        var tabCount = $('#hbes-tabnav-title-list').children().length;
                        if (index == tabCount) {
                            //如果当前tab的索引值等于移除当前tab后的tab总数，则将当前索引-1选中
                            $('#hbes-tabnav-title-list').children().eq(index - 1).addClass('active');");
                WriteLiteral(@"
                            $('#hbes-iframe-box').children().eq(index - 1).removeClass('display-none');
                        }
                        else {
                            //如果当前tab的索引值不等于移除当前tab后的tab总数，则将tab总数-1选中
                            $('#hbes-tabnav-title-list').children().eq(tabCount - 1).addClass('active');
                            $('#hbes-iframe-box').children().eq(tabCount - 1).removeClass('display-none');
                        }
                    });
                },
                closeAllTable: function () {
                    $(""#default_li"").addClass(""active"").siblings().remove();
                    $(""#default_if"").removeClass('display-none').siblings().remove();
                }
            }
        })();

    </script>

    <script type=""text/javascript"">


    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
